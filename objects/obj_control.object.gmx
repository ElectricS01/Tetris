<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time = 0
global.settings = false
rand = 0
debug = false
variable = 0
obj_control.var11 = 0
obj_control.var12 = 0
obj_control.var13 = 0
obj_control.var14 = 0
rotation = 0
type = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time += 1

if position_meeting(720, 144, obj_brick) game_restart()

if instance_exists(obj_block){
    
    if keyboard_check_pressed(vk_right){
        if !(position_meeting(inst0.x+64, inst0.y, obj_brick) || position_meeting(inst1.x+64, inst1.y, obj_brick) || position_meeting(inst2.x+64, inst2.y, obj_brick) || position_meeting(inst3.x+64, inst3.y, obj_brick)){
            if (inst0.x &lt; 976 &amp;&amp; inst1.x &lt; 976 &amp;&amp; inst2.x &lt; 976 &amp;&amp; inst3.x &lt; 976){
                inst0.x += 64
                inst1.x += 64
                inst2.x += 64
                inst3.x += 64
            }
        }
    }
    
    if keyboard_check_pressed(vk_left){
        if !(position_meeting(inst0.x-64, inst0.y, obj_brick) || position_meeting(inst1.x-64, inst1.y, obj_brick) || position_meeting(inst2.x-64, inst2.y, obj_brick) || position_meeting(inst3.x-64, inst3.y, obj_brick)){
            if (inst0.x &gt; 400 &amp;&amp; inst1.x &gt; 400 &amp;&amp; inst2.x &gt; 400 &amp;&amp; inst3.x &gt; 400){
                inst0.x -= 64
                inst1.x -= 64
                inst2.x -= 64
                inst3.x -= 64
            }
        }
    }
    
    if keyboard_check_pressed(vk_down){
        inst0.y += 64
        inst1.y += 64
        inst2.y += 64
        inst3.y += 64
    }
    
    if time &gt;= 30{
        time = 0
        if(inst0.y &lt; 1296 &amp;&amp; inst1.y &lt; 1296 &amp;&amp; inst2.y &lt; 1296 &amp;&amp; inst3.y &lt; 1296 &amp;&amp; !position_meeting(inst0.x,inst0.y+64,obj_brick) &amp;&amp; !position_meeting(inst1.x,inst1.y+64,obj_brick) &amp;&amp; !position_meeting(inst2.x,inst2.y+64,obj_brick) &amp;&amp; !position_meeting(inst3.x,inst3.y+64,obj_brick)){
            inst0.y += 64
            inst1.y += 64
            inst2.y += 64
            inst3.y += 64
        }
    }
    
    if keyboard_check_pressed(vk_up){
        if type = 0{
            if rotation = 0{
                if !(position_meeting(inst0.x-128, inst0.y-64, obj_brick) || position_meeting(inst0.x-64, inst0.y, obj_brick) || position_meeting(inst0.x, inst0.y+64, obj_brick) || position_meeting(inst0.x+64, inst0.y+128, obj_brick)){
                    if !(inst0.y &gt;= 1104 || position_meeting(inst3.x+64, inst3.y+128, obj_brick)){
                        inst0.x -= 128 inst0.y -= 64
                        inst1.x -= 64
                        inst2.y += 64
                        inst3.x += 64 inst3.y += 128
                        rotation = 1
                        exit
                    } else {
                        inst0.x -= 128 inst0.y -= 128
                        inst1.x -= 64 inst1.y -= 64
                        inst3.x += 64 inst3.y += 64
                        rotation = 1
                        exit
                    }
                }
            }
            
            if rotation = 1{
                if !(position_meeting(inst0.x+128, inst0.y+64, obj_brick) || position_meeting(inst0.x+64, inst0.y, obj_brick) || position_meeting(inst0.x, inst0.y-64, obj_brick) || position_meeting(inst0.x-64, inst0.y-128, obj_brick)){
                    inst0.x += 128 inst0.y += 64
                    inst1.x += 64
                    inst2.y -= 64
                    inst3.x -= 64 inst3.y -= 128
                    rotation = 0
                }
            }
        }
        
        if type = 2{
            if rotation = 0{
                if !(position_meeting(inst0.x, inst0.y+64, obj_brick) &amp;&amp; position_meeting(inst2.x+64, inst2.y+64, obj_brick) &amp;&amp; position_meeting(inst3.x+64, inst3.y-64, obj_brick)){
                    inst0.y += 64
                    inst2.x += 64 inst2.y += 64
                    inst3.x += 64 
                    rotation = 1
                    exit
                }
            }
            
            if rotation = 1{
                if !(position_meeting(inst0.x, inst0.y-64, obj_brick) &amp;&amp; position_meeting(inst2.x-64, inst2.y-64, obj_brick) &amp;&amp; position_meeting(inst3.x-64, inst3.y+64, obj_brick)){
                    inst0.y -= 64
                    inst2.x -= 64 inst2.y -= 64
                    inst3.x -= 64
                    rotation = 0
                }
            }
        }
        
        if type = 3{
            if rotation = 0{
                if !(position_meeting(inst0.x-64, inst0.y+64, obj_brick) &amp;&amp; position_meeting(inst2.x+64, inst2.y+64, obj_brick) &amp;&amp; position_meeting(inst3.x+128, inst3.y, obj_brick)){
                    inst0.x -= 64 inst0.y += 64
                    inst2.x += 64 inst2.y += 64
                    inst3.x += 128
                    rotation = 1
                    exit
                }
            }
            
            if rotation = 1{
                if !(position_meeting(inst0.x+64, inst0.y-64, obj_brick) &amp;&amp; position_meeting(inst2.x-64, inst2.y-64, obj_brick) &amp;&amp; position_meeting(inst3.x-128, inst3.y, obj_brick)){
                    inst0.x += 64 inst0.y -= 64
                    inst2.x -= 64 inst2.y -= 64
                    inst3.x -= 128
                    rotation = 0
                }
            }
        }
        
        if type = 4{
            if rotation = 0{
                if !(position_meeting(inst2.x, inst2.y+64, obj_brick)){
                    inst3.x += 64 inst3.y += 64
                    rotation = 1
                    exit
                }
            }
            
            if rotation = 1{
                if !(position_meeting(inst2.x-64, inst2.y, obj_brick)){
                    inst1.x -=64 inst1.y += 64
                    rotation = 2
                    exit
                }
            }
            
            if rotation = 2{
                if !(position_meeting(inst2.x, inst2.y+64, obj_brick)){
                    inst0.x -=64 inst0.y -= 64
                    rotation = 3
                    exit
                }
            }
            
            if rotation = 3{
                if !(position_meeting(inst2.x+64, inst2.y, obj_brick)){
                    inst3.x -= 64 inst3.y -= 64
                    inst1.x +=64 inst1.y -= 64
                    inst0.x +=64 inst0.y += 64
                    rotation = 0
                }
            }
        }
        
        if type = 5{
            if rotation = 0{
                if !(position_meeting(inst0.x, inst0.y+128, obj_brick) &amp;&amp; position_meeting(inst1.x-64, inst1.y+64, obj_brick) &amp;&amp; position_meeting(inst3.x+64, inst3.y-64, obj_brick)){
                    inst0.y += 128
                    inst1.x -= 64 inst1.y += 64
                    inst3.x += 64 inst3.y -= 64
                    rotation = 1
                    exit
                }
            }
            
            if rotation = 1{
                if !(position_meeting(inst0.x-128, inst0.y, obj_brick) &amp;&amp; position_meeting(inst1.x-64, inst1.y-64, obj_brick) &amp;&amp; position_meeting(inst3.x+64, inst3.y+64, obj_brick)){
                    inst0.x -= 128
                    inst1.x -=64 inst1.y -= 64
                    inst3.x += 64 inst3.y += 64
                    rotation = 2
                    exit
                }
            }
            
            if rotation = 2{
                if !(position_meeting(inst0.x, inst0.y-128, obj_brick) &amp;&amp; position_meeting(inst1.x+64, inst1.y-64, obj_brick) &amp;&amp; position_meeting(inst3.x-64, inst3.y+64, obj_brick)){
                    inst0.y -= 128
                    inst1.x += 64 inst1.y -= 64
                    inst3.x -= 64 inst3.y += 64
                    rotation = 3
                    exit
                }
            }
            
            if rotation = 3{
                if !(position_meeting(inst0.x+128, inst0.y, obj_brick) &amp;&amp; position_meeting(inst1.x+64, inst1.y+64, obj_brick) &amp;&amp; position_meeting(inst3.x-64, inst3.y-64, obj_brick)){
                    inst0.x += 128
                    inst1.x += 64 inst1.y += 64
                    inst3.x -= 64 inst3.y -= 64
                    rotation = 0
                }
            }
        }
        
        if type = 6{
            if rotation = 0{
                if !(position_meeting(inst0.x, inst0.y+128, obj_brick) &amp;&amp; position_meeting(inst1.x-64, inst1.y+64, obj_brick) &amp;&amp; position_meeting(inst3.x+64, inst3.y-64, obj_brick)){
                    inst0.x -= 64 inst0.y += 64 
                    inst2.x += 64 inst2.y -= 64
                    inst3.x += 128
                    rotation = 1
                    exit
                }
            }
            
            if rotation = 1{
                if !(position_meeting(inst0.x-128, inst0.y, obj_brick) &amp;&amp; position_meeting(inst1.x-64, inst1.y-64, obj_brick) &amp;&amp; position_meeting(inst3.x+64, inst3.y+64, obj_brick)){
                    inst0.x -= 64 inst0.y -= 64
                    inst2.x +=64 inst2.y += 64
                    inst3.y += 128
                    rotation = 2
                    exit
                }
            }
            
            if rotation = 2{
                if !(position_meeting(inst0.x, inst0.y-128, obj_brick) &amp;&amp; position_meeting(inst1.x+64, inst1.y-64, obj_brick) &amp;&amp; position_meeting(inst3.x-64, inst3.y+64, obj_brick)){
                    inst0.x += 64 inst0.y -= 64
                    inst2.x -= 64 inst2.y += 64
                    inst3.x -= 128
                    rotation = 3
                    exit
                }
            }
            
            if rotation = 3{
                if !(position_meeting(inst0.x+128, inst0.y, obj_brick) &amp;&amp; position_meeting(inst1.x+64, inst1.y+64, obj_brick) &amp;&amp; position_meeting(inst3.x-64, inst3.y-64, obj_brick)){
                    inst0.x += 64 inst0.y += 64
                    inst2.x -= 64 inst2.y -= 64
                    inst3.y -= 128
                    rotation = 0
                }
            }
        }
    }
}

if !instance_exists(obj_block){
    rotation = 0
    rand = round(random(7))
    
    if rand = 0{
    type = 0
        inst0 = instance_create(784, 144, obj_block)
        inst1 = instance_create(720, 144, obj_block)
        inst2 = instance_create(656, 144, obj_block)
        inst3 = instance_create(592, 144, obj_block)
    }
    
    if rand = 1{
        type = 1
        inst0 = instance_create(720, 144, obj_block)
        inst0.image_index = 1
        inst1 = instance_create(720, 208, obj_block)
        inst1.image_index = 1
        inst2 = instance_create(656, 144, obj_block)
        inst2.image_index = 1
        inst3 = instance_create(656, 208, obj_block)
        inst3.image_index = 1
    }
    
    if rand = 2{
        type = 2
        inst0 = instance_create(720, 144, obj_block)
        inst0.image_index = 2
        inst1 = instance_create(656, 144, obj_block)
        inst1.image_index = 2
        inst2 = instance_create(656, 208, obj_block)
        inst2.image_index = 2
        inst3 = instance_create(592, 208, obj_block)
        inst3.image_index = 2
    }
    
    if rand = 3{
        type = 3
        inst0 = instance_create(720, 208, obj_block)
        inst0.image_index = 3
        inst1 = instance_create(656, 208, obj_block)
        inst1.image_index = 3
        inst2 = instance_create(656, 144, obj_block)
        inst2.image_index = 3
        inst3 = instance_create(592, 144, obj_block)
        inst3.image_index = 3
    }
    
    if rand = 4{
        type = 4
        inst0 = instance_create(720, 208, obj_block)
        inst0.image_index = 4
        inst1 = instance_create(656, 144, obj_block)
        inst1.image_index = 4
        inst2 = instance_create(656, 208, obj_block)
        inst2.image_index = 4
        inst3 = instance_create(592, 208, obj_block)
        inst3.image_index = 4
    }
    
    if rand = 5{
        type = 5
        inst0 = instance_create(720, 144, obj_block)
        inst0.image_index = 5
        inst1 = instance_create(720, 208, obj_block)
        inst1.image_index = 5
        inst2 = instance_create(656, 208, obj_block)
        inst2.image_index = 5
        inst3 = instance_create(592, 208, obj_block)
        inst3.image_index = 5
    }
    
    if rand = 6{
        type = 6
        inst0 = instance_create(720, 208, obj_block)
        inst0.image_index = 6
        inst1 = instance_create(656, 208, obj_block)
        inst1.image_index = 6
        inst2 = instance_create(592, 208, obj_block)
        inst2.image_index = 6
        inst3 = instance_create(592, 144, obj_block)
        inst3.image_index = 6
    }
}

if instance_exists(inst0) &amp;&amp; instance_exists(inst1) &amp;&amp; instance_exists(inst2) &amp;&amp; instance_exists(inst3){
    if (inst0.y &gt; 1168 || inst1.y &gt; 1168 || inst2.y &gt; 1168 || inst3.y &gt; 1168 || position_meeting(inst0.x, inst0.y+64, obj_brick) || position_meeting(inst1.x, inst1.y+64, obj_brick) || position_meeting(inst2.x, inst2.y+64, obj_brick) || position_meeting(inst3.x, inst3.y+64, obj_brick)){
        inst4 = instance_create(inst0.x, inst0.y, obj_brick)
        inst4.image_index = inst0.image_index
        inst5 = instance_create(inst1.x, inst1.y, obj_brick)
        inst5.image_index = inst1.image_index
        inst6 = instance_create(inst2.x, inst2.y, obj_brick)
        inst6.image_index = inst2.image_index
        inst7 = instance_create(inst3.x, inst3.y, obj_brick)
        inst7.image_index = inst3.image_index
        instance_destroy(obj_block)
    }
}

if variable &gt;= 1{
    score += (((obj_control.var11+1*10)*(obj_control.var12+1*3))*(obj_control.var13+1*3))*(obj_control.var14+1*3)
    with obj_brick{
        if y &lt; obj_control.variable{
            y += (obj_control.var11 + obj_control.var12 + obj_control.var13 + obj_control.var14) * 64
        }
    }
    obj_control.var11 = 0
    obj_control.var12 = 0
    obj_control.var13 = 0
    obj_control.var14 = 0
    variable = 0
}

var1 = 1232

if position_meeting(400, var1, obj_brick) &amp;&amp; position_meeting(464, var1, obj_brick) &amp;&amp; position_meeting(528, var1,obj_brick) &amp;&amp; position_meeting(592, var1, obj_brick) &amp;&amp; position_meeting(656, var1, obj_brick) &amp;&amp; position_meeting(720, var1,obj_brick) &amp;&amp; position_meeting(784, var1, obj_brick) &amp;&amp; position_meeting(848, var1, obj_brick) &amp;&amp; position_meeting(912, var1,obj_brick) &amp;&amp; position_meeting(976, var1, obj_brick){
    with obj_brick{
        if y = obj_control.var1{
            instance_destroy()
            obj_control.variable = obj_control.var1
            obj_control.var11 = 1
        }
    }
}

var1 = 1168

if position_meeting(400, var1, obj_brick) &amp;&amp; position_meeting(464, var1, obj_brick) &amp;&amp; position_meeting(528, var1,obj_brick) &amp;&amp; position_meeting(592, var1, obj_brick) &amp;&amp; position_meeting(656, var1, obj_brick) &amp;&amp; position_meeting(720, var1,obj_brick) &amp;&amp; position_meeting(784, var1, obj_brick) &amp;&amp; position_meeting(848, var1, obj_brick) &amp;&amp; position_meeting(912, var1,obj_brick) &amp;&amp; position_meeting(976, var1, obj_brick){
    with obj_brick{
        if y = obj_control.var1{
            instance_destroy()
            obj_control.variable = obj_control.var1
            obj_control.var12 = 1
        }
    }
}

var1 = 1104

if position_meeting(400, var1, obj_brick) &amp;&amp; position_meeting(464, var1, obj_brick) &amp;&amp; position_meeting(528, var1,obj_brick) &amp;&amp; position_meeting(592, var1, obj_brick) &amp;&amp; position_meeting(656, var1, obj_brick) &amp;&amp; position_meeting(720, var1,obj_brick) &amp;&amp; position_meeting(784, var1, obj_brick) &amp;&amp; position_meeting(848, var1, obj_brick) &amp;&amp; position_meeting(912, var1,obj_brick) &amp;&amp; position_meeting(976, var1, obj_brick){
    with obj_brick{
        if y = obj_control.var1{
            instance_destroy()
            obj_control.variable = obj_control.var1
            obj_control.var13 = 1
        }
    }
}

var1 = 1040

if position_meeting(400, var1, obj_brick) &amp;&amp; position_meeting(464, var1, obj_brick) &amp;&amp; position_meeting(528, var1,obj_brick) &amp;&amp; position_meeting(592, var1, obj_brick) &amp;&amp; position_meeting(656, var1, obj_brick) &amp;&amp; position_meeting(720, var1,obj_brick) &amp;&amp; position_meeting(784, var1, obj_brick) &amp;&amp; position_meeting(848, var1, obj_brick) &amp;&amp; position_meeting(912, var1,obj_brick) &amp;&amp; position_meeting(976, var1, obj_brick){
    with obj_brick{
        if y = obj_control.var1{
            instance_destroy()
            obj_control.variable = obj_control.var1
            obj_control.var14 = 1
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1)
draw_set_font(fnt_header)
draw_set_colour(c_white)
draw_text(10,0,"Tetris By Electric S01")
draw_text(10,80,"Score:" + string(score))

draw_set_colour(make_colour_rgb(25, 25, 25))
draw_rectangle(400,144,1040,1296, false)

draw_set_colour(c_white)
draw_rectangle(400,144,1040,1296, true)


draw_sprite(spr_settings, 0, 1400, 40)

va = 80

draw_set_colour(c_white)
draw_text(0, 13*va, "FPS = " + string(fps))
draw_text(0, 14*va, "Real FPS = " + string(fps_real))
draw_text(0, 15*va, "room_speed = " + string(room_speed))
draw_text(0, 16*va, "Test var = " + string(rotation))

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>debug = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy(obj_block)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
