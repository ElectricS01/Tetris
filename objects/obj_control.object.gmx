<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>size = 0
time = 0
rand = 0
debug = false
rotation = 0
type = 0
randomize()
game_ended = false
game_paused = false
next_block = -1
while next_block &lt; 0{
    next_block = round(random(7)-1)
}

var21 = 0
var22 = 0

bonus = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (os_browser != browser_not_a_browser) {
    if (browser_width &gt;= 720) &amp;&amp; (browser_height &gt;= 720) {
        size = 720
    } else {
        if (browser_width &lt;= browser_height){
            size = browser_width
        } else {
            size = browser_height
        }
    }
    window_set_size(size, size)
}

if game_ended || game_paused{
    if !instance_exists(obj_restart){
        instance_create(720, 800, obj_restart)
    }
} else if global.game_started {
    if instance_exists(obj_restart){
        instance_destroy(obj_restart)
    }
        time += 1

    if instance_exists(obj_block){

        if keyboard_check_pressed(vk_right) || keyboard_check_pressed(ord('D')){
            if !(position_meeting(inst0.x+64, inst0.y, obj_brick) || position_meeting(inst1.x+64, inst1.y, obj_brick) || position_meeting(inst2.x+64, inst2.y, obj_brick) || position_meeting(inst3.x+64, inst3.y, obj_brick)){
                if (inst0.x &lt; 976 &amp;&amp; inst1.x &lt; 976 &amp;&amp; inst2.x &lt; 976 &amp;&amp; inst3.x &lt; 976){
                    inst0.x += 64
                    inst1.x += 64
                    inst2.x += 64
                    inst3.x += 64
                }
            }
        }

        if keyboard_check_pressed(vk_left) || keyboard_check_pressed(ord('A')){
            if !(position_meeting(inst0.x-64, inst0.y, obj_brick) || position_meeting(inst1.x-64, inst1.y, obj_brick) || position_meeting(inst2.x-64, inst2.y, obj_brick) || position_meeting(inst3.x-64, inst3.y, obj_brick)){
                if (inst0.x &gt; 400 &amp;&amp; inst1.x &gt; 400 &amp;&amp; inst2.x &gt; 400 &amp;&amp; inst3.x &gt; 400){
                    inst0.x -= 64
                    inst1.x -= 64
                    inst2.x -= 64
                    inst3.x -= 64
                }
            }
        }

        if keyboard_check_pressed(vk_down) || keyboard_check_pressed(ord('S')){
            if instance_exists(inst0) &amp;&amp; instance_exists(inst1) &amp;&amp; instance_exists(inst2) &amp;&amp; instance_exists(inst3){
                if (inst0.y &lt;= 1168 &amp;&amp; inst1.y &lt;= 1168 &amp;&amp; inst2.y &lt;= 1168 &amp;&amp; inst3.y &lt;= 1168 &amp;&amp; !position_meeting(inst0.x, inst0.y+64, obj_brick) &amp;&amp; !position_meeting(inst1.x, inst1.y+64, obj_brick) &amp;&amp; !position_meeting(inst2.x, inst2.y+64, obj_brick) &amp;&amp; !position_meeting(inst3.x, inst3.y+64, obj_brick)){
                    inst0.y += 64
                    inst1.y += 64
                    inst2.y += 64
                    inst3.y += 64
                }
            }
        }

        if keyboard_check_pressed(vk_space){
            while (inst0.y &lt;= 1168 &amp;&amp; inst1.y &lt;= 1168 &amp;&amp; inst2.y &lt;= 1168 &amp;&amp; inst3.y &lt;= 1168 &amp;&amp; !position_meeting(inst0.x, inst0.y+64, obj_brick) &amp;&amp; !position_meeting(inst1.x, inst1.y+64, obj_brick) &amp;&amp; !position_meeting(inst2.x, inst2.y+64, obj_brick) &amp;&amp; !position_meeting(inst3.x, inst3.y+64, obj_brick)){
                inst0.y += 64
                inst1.y += 64
                inst2.y += 64
                inst3.y += 64
            }
            if (inst0.y &gt; 1168 || inst1.y &gt; 1168 || inst2.y &gt; 1168 || inst3.y &gt; 1168 || position_meeting(inst0.x, inst0.y+64, obj_brick) || position_meeting(inst1.x, inst1.y+64, obj_brick) || position_meeting(inst2.x, inst2.y+64, obj_brick) || position_meeting(inst3.x, inst3.y+64, obj_brick)){
                inst4 = instance_create(inst0.x, inst0.y, obj_brick)
                inst4.image_index = inst0.image_index
                inst5 = instance_create(inst1.x, inst1.y, obj_brick)
                inst5.image_index = inst1.image_index
                inst6 = instance_create(inst2.x, inst2.y, obj_brick)
                inst6.image_index = inst2.image_index
                inst7 = instance_create(inst3.x, inst3.y, obj_brick)
                inst7.image_index = inst3.image_index
                instance_destroy(obj_block)
            }

            time = 0
        }

        if time &gt;= global.difficulty{
            time = 0
            if (inst0.y &lt; 1232 &amp;&amp; inst1.y &lt; 1232 &amp;&amp; inst2.y &lt; 1232 &amp;&amp; inst3.y &lt; 1232 &amp;&amp; !position_meeting(inst0.x, inst0.y+64, obj_brick) &amp;&amp; !position_meeting(inst1.x, inst1.y+64, obj_brick) &amp;&amp; !position_meeting(inst2.x, inst2.y+64, obj_brick) &amp;&amp; !position_meeting(inst3.x, inst3.y+64, obj_brick)){
                inst0.y += 64
                inst1.y += 64
                inst2.y += 64
                inst3.y += 64
            }
        }

        if keyboard_check_pressed(vk_up) || keyboard_check_pressed(ord('W')){
            if type = 0{
                if rotation = 0{
                    if (inst0.y &lt;= 1104 &amp;&amp; !position_meeting(inst0.x-128, inst0.y-64, obj_brick) &amp;&amp; !position_meeting(inst1.x-64, inst1.y, obj_brick) &amp;&amp; !position_meeting(inst2.x, inst2.y+64, obj_brick) &amp;&amp; !position_meeting(inst3.x+64, inst3.y+128, obj_brick)){
                        inst0.x -= 128 inst0.y -= 64
                        inst1.x -= 64
                        inst2.y += 64
                        inst3.x += 64 inst3.y += 128
                        rotation = 1
                        exit
                    } else if (inst0.y &lt;= 1168 &amp;&amp; !position_meeting(inst0.x-128, inst0.y-128, obj_brick) &amp;&amp; !position_meeting(inst1.x-64, inst1.y-64, obj_brick) &amp;&amp; !position_meeting(inst3.x+64, inst3.y+64, obj_brick)){
                        inst0.x -= 128 inst0.y -= 128
                        inst1.x -= 64 inst1.y -= 64
                        inst3.x += 64 inst3.y += 64
                        rotation = 1
                        exit
                    } else if (inst0.y &lt;= 1232 &amp;&amp; !position_meeting(inst0.x-128, inst0.y-192, obj_brick) &amp;&amp; !position_meeting(inst1.x-64, inst1.y-128, obj_brick) &amp;&amp; !position_meeting(inst3.x+64, inst3.y, obj_brick)){
                        inst0.x -= 128 inst0.y -= 192
                        inst1.x -= 64 inst1.y -= 128
                        inst2.y -= 64
                        inst3.x += 64
                        rotation = 1
                        exit
                    }
                }

                if rotation = 1{
                    if (inst0.x &gt;= 464 &amp;&amp; inst0.x &lt;= 848 &amp;&amp; !position_meeting(inst0.x+128, inst0.y+64, obj_brick) &amp;&amp; !position_meeting(inst1.x+64, inst1.y, obj_brick) &amp;&amp; !position_meeting(inst2.x, inst2.y-64, obj_brick) &amp;&amp; !position_meeting(inst3.x-64, inst3.y-128, obj_brick)){
                        inst0.x += 128 inst0.y += 64
                        inst1.x += 64
                        inst2.y -= 64
                        inst3.x -= 64 inst3.y -= 128
                        rotation = 0
                        exit
                    } else if (inst0.x = 400 &amp;&amp; !position_meeting(inst0.x+192, inst0.y+64, obj_brick) &amp;&amp; !position_meeting(inst1.x+128, inst1.y, obj_brick) &amp;&amp; !position_meeting(inst2.x+64, inst2.y-64, obj_brick) &amp;&amp; !position_meeting(inst3.x, inst3.y-128, obj_brick)){
                        inst0.x += 192 inst0.y += 64
                        inst1.x += 128
                        inst2.x += 64 inst2.y -= 64
                        inst3.y -= 128
                        rotation = 0
                        exit
                    } else if (inst0.x = 912 &amp;&amp; !position_meeting(inst0.x+64, inst0.y+64, obj_brick) &amp;&amp; !position_meeting(inst1.x, inst1.y, obj_brick) &amp;&amp; !position_meeting(inst2.x-64, inst2.y-64, obj_brick) &amp;&amp; !position_meeting(inst3.x-128, inst3.y-128, obj_brick)){
                        inst0.x += 64 inst0.y += 64
                        inst2.x -= 64 inst2.y -= 64
                        inst3.x -= 128 inst3.y -= 128
                        rotation = 0
                        exit
                    } else if (inst0.x = 976 &amp;&amp; !position_meeting(inst0.x, inst0.y+64, obj_brick) &amp;&amp; !position_meeting(inst1.x-64, inst1.y, obj_brick) &amp;&amp; !position_meeting(inst2.x-128, inst2.y-64, obj_brick) &amp;&amp; !position_meeting(inst3.x-192, inst3.y-128, obj_brick)){
                        inst0.y += 64
                        inst1.x -= 64
                        inst2.x -= 128 inst2.y -= 64
                        inst3.x -= 192 inst3.y -= 128
                        rotation = 0
                        exit
                    }
                }
            }

            if type = 2{
                if rotation = 0{
                    if (inst3.y &lt;= 1168 &amp;&amp; !position_meeting(inst0.x, inst0.y+64, obj_brick) &amp;&amp; !position_meeting(inst2.x+64, inst2.y+64, obj_brick) &amp;&amp; !position_meeting(inst3.x+64, inst3.y, obj_brick)){
                        inst0.y += 64
                        inst2.x += 64 inst2.y += 64
                        inst3.x += 64
                        rotation = 1
                        exit
                    } else if (inst3.y = 1232 &amp;&amp; !position_meeting(inst0.x, inst0.y+64, obj_brick) &amp;&amp; !position_meeting(inst2.x+64, inst2.y+64, obj_brick) &amp;&amp; !position_meeting(inst3.x+64, inst3.y, obj_brick)){
                        inst1.y -= 64
                        inst2.x += 64
                        inst3.x += 64 inst3.y -= 64
                        rotation = 1
                        exit
                    }
                }

                if rotation = 1{
                    if (inst3.x &gt;= 464 &amp;&amp; !position_meeting(inst0.x, inst0.y-64, obj_brick) &amp;&amp; !position_meeting(inst2.x-64, inst2.y-64, obj_brick) &amp;&amp; !position_meeting(inst3.x-64, inst3.y, obj_brick)){
                        inst0.y -= 64
                        inst2.x -= 64 inst2.y -= 64
                        inst3.x -= 64
                        rotation = 0
                        exit
                    } else if (inst3.x = 400 &amp;&amp; !position_meeting(inst0.x, inst0.y-64, obj_brick) &amp;&amp; !position_meeting(inst2.x-64, inst2.y-64, obj_brick) &amp;&amp; !position_meeting(inst3.x-64, inst3.y, obj_brick)){
                        inst0.y -= 64 inst0.x += 64
                        inst1.x += 64
                        inst2.y -= 64
                        rotation = 0
                        exit
                    }
                }
            }

            if type = 3{
                if rotation = 0{
                    if (inst3.y &lt;= 1104 &amp;&amp; !position_meeting(inst0.x-64, inst0.y+64, obj_brick) &amp;&amp; !position_meeting(inst2.x+64, inst2.y+64, obj_brick) &amp;&amp; !position_meeting(inst3.x+128, inst3.y, obj_brick)){
                        inst0.x -= 64 inst0.y += 64
                        inst2.x += 64 inst2.y += 64
                        inst3.x += 128
                        rotation = 1
                        exit
                    } else if (inst3.y = 1168 &amp;&amp; !position_meeting(inst0.x-64, inst0.y+64, obj_brick) &amp;&amp; !position_meeting(inst2.x+64, inst2.y+64, obj_brick) &amp;&amp; !position_meeting(inst3.x+128, inst3.y, obj_brick)){
                        inst0.x -= 64
                        inst1.y -= 64
                        inst2.x += 64
                        inst3.x += 128 inst3.y -= 64
                        rotation = 1
                        exit
                    }
                }

                if rotation = 1{
                    if (inst3.x &gt;= 528 &amp;&amp; !position_meeting(inst0.x+64, inst0.y-64, obj_brick) &amp;&amp; !position_meeting(inst2.x-64, inst2.y-64, obj_brick) &amp;&amp; !position_meeting(inst3.x-128, inst3.y, obj_brick)){
                        inst0.x += 64 inst0.y -= 64
                        inst2.x -= 64 inst2.y -= 64
                        inst3.x -= 128
                        rotation = 0
                        exit
                    } else if (inst3.x = 464 &amp;&amp; !position_meeting(inst0.x+64, inst0.y-64, obj_brick) &amp;&amp; !position_meeting(inst2.x-64, inst2.y-64, obj_brick) &amp;&amp; !position_meeting(inst3.x-128, inst3.y, obj_brick)){
                        inst0.x += 128 inst0.y -= 64
                        inst1.x += 64
                        inst2.y -= 64
                        inst3.x -= 64
                        rotation = 0
                        exit
                    }
                }
            }

            if type = 4{
                if rotation = 0{
                    if (inst0.y &lt;= 1168 &amp;&amp; !position_meeting(inst2.x, inst2.y+64, obj_brick)){
                        inst3.x += 64 inst3.y += 64
                        rotation = 1
                        exit
                    } else if (inst0.y == 1232 &amp;&amp; !position_meeting(inst2.x, inst2.y+64, obj_brick)){
                        inst0.y -= 64
                        inst1.y -= 64
                        inst2.y -= 64
                        inst3.x += 64
                        rotation = 1
                        exit
                    }
                }

                if rotation = 1{
                    if (inst1.x &gt;= 464 &amp;&amp; !position_meeting(inst2.x-64, inst2.y, obj_brick)){
                        inst1.x -= 64 inst1.y += 64
                        rotation = 2
                        exit
                    } else if (inst1.x = 400 &amp;&amp; !position_meeting(inst2.x-64, inst2.y, obj_brick)){
                        inst0.x += 64
                        inst1.y += 64
                        inst2.x += 64
                        inst3.x += 64
                        rotation = 2
                        exit
                    }
                }

                if rotation = 2{
                    if (!position_meeting(inst2.x, inst2.y+64, obj_brick)){
                        inst0.x -= 64 inst0.y -= 64
                        rotation = 3
                        exit
                    }
                }

                if rotation = 3{
                    if (inst0.x &lt;= 912 &amp;&amp; !position_meeting(inst2.x+64, inst2.y, obj_brick)){
                        inst0.x += 64 inst0.y += 64
                        inst1.x += 64 inst1.y -= 64
                        inst3.x -= 64 inst3.y -= 64
                        rotation = 0
                    } else if (inst0.x = 976 &amp;&amp; !position_meeting(inst2.x+64, inst2.y, obj_brick)){
                        inst0.y += 64
                        inst1.y -= 64
                        inst2.x -= 64
                        inst3.x -= 128 inst3.y -= 64
                        rotation = 0
                    }
                }
            }

            if type = 5{
                if rotation = 0{
                    if (!position_meeting(inst0.x, inst0.y+128, obj_brick) &amp;&amp; !position_meeting(inst1.x-64, inst1.y+64, obj_brick) &amp;&amp; !position_meeting(inst3.x+64, inst3.y-64, obj_brick)){
                        inst0.y += 128
                        inst1.x -= 64 inst1.y += 64
                        inst3.x += 64 inst3.y -= 64
                        rotation = 1
                        exit
                    }
                }

                if rotation = 1{
                    if (inst1.x &gt;= 464 &amp;&amp; !position_meeting(inst0.x-128, inst0.y, obj_brick) &amp;&amp; !position_meeting(inst1.x-64, inst1.y-64, obj_brick) &amp;&amp; !position_meeting(inst3.x+64, inst3.y+64, obj_brick)){
                        inst0.x -= 128
                        inst1.x -= 64 inst1.y -= 64
                        inst3.x += 64 inst3.y += 64
                        rotation = 2
                        exit
                    } else {
                        inst0.x -= 64
                        inst1.y -= 64
                        inst2.x += 64
                        inst3.x += 128 inst3.y += 64
                        rotation = 2
                        exit
                    }
                }

                if rotation = 2{
                    if (!position_meeting(inst0.x, inst0.y-128, obj_brick) &amp;&amp; !position_meeting(inst1.x+64, inst1.y-64, obj_brick) &amp;&amp; !position_meeting(inst3.x-64, inst3.y+64, obj_brick)){
                        inst0.y -= 128
                        inst1.x += 64 inst1.y -= 64
                        inst3.x -= 64 inst3.y += 64
                        rotation = 3
                        exit
                    }
                }

                if rotation = 3{
                    if (inst1.x &lt;= 912 &amp;&amp; !position_meeting(inst0.x+128, inst0.y, obj_brick) &amp;&amp; !position_meeting(inst1.x+64, inst1.y+64, obj_brick) &amp;&amp; !position_meeting(inst3.x-64, inst3.y-64, obj_brick)){
                        inst0.x += 128
                        inst1.x += 64 inst1.y += 64
                        inst3.x -= 64 inst3.y -= 64
                        rotation = 0
                    } else {
                        inst0.x += 64
                        inst1.y += 64
                        inst2.x -= 64
                        inst3.x -= 128 inst3.y -= 64
                        rotation = 0
                    }
                }
            }

            if type = 6{
                if rotation = 0{
                    if (!position_meeting(inst0.x-64, inst0.y+64, obj_brick) &amp;&amp; !position_meeting(inst2.x+64, inst2.y-64, obj_brick) &amp;&amp; !position_meeting(inst3.x+128, inst3.y, obj_brick)){
                        inst0.x -= 64 inst0.y += 64
                        inst2.x += 64 inst2.y -= 64
                        inst3.x += 128
                        rotation = 1
                        exit
                    }
                }

                if rotation = 1{
                    if (!position_meeting(inst0.x-64, inst0.y-64, obj_brick) &amp;&amp; !position_meeting(inst2.x+64, inst2.y+64, obj_brick) &amp;&amp; !position_meeting(inst3.x, inst3.y+128, obj_brick)){
                        inst0.x -= 64 inst0.y -= 64
                        inst2.x += 64 inst2.y += 64
                        inst3.y += 128
                        rotation = 2
                        exit
                    }
                }

                if rotation = 2{
                    if (!position_meeting(inst0.x+64, inst0.y-64, obj_brick) &amp;&amp; !position_meeting(inst2.x-64, inst2.y+64, obj_brick) &amp;&amp; !position_meeting(inst3.x-128, inst3.y, obj_brick)){
                        inst0.x += 64 inst0.y -= 64
                        inst2.x -= 64 inst2.y += 64
                        inst3.x -= 128
                        rotation = 3
                        exit
                    }
                }

                if rotation = 3{
                    if (!position_meeting(inst0.x+64, inst0.y+64, obj_brick) &amp;&amp; !position_meeting(inst2.x-64, inst2.y-64, obj_brick) &amp;&amp; !position_meeting(inst3.x, inst3.y-128, obj_brick)){
                        inst0.x += 64 inst0.y += 64
                        inst2.x -= 64 inst2.y -= 64
                        inst3.y -= 128
                        rotation = 0
                    }
                }
            }
        }
    }

    while !instance_exists(obj_block){
        rotation = 0
        rand = next_block

        if rand = 0{
            type = 0
            if (position_meeting(784, 144, obj_brick) || position_meeting(720, 144, obj_brick) || position_meeting(656, 144, obj_brick) || position_meeting(592, 144, obj_brick)){
                game_ended = true
                exit
            }
            inst0 = instance_create(784, 144, obj_block)
            inst1 = instance_create(720, 144, obj_block)
            inst2 = instance_create(656, 144, obj_block)
            inst3 = instance_create(592, 144, obj_block)
        }

        if rand = 1{
            type = 1
            if (position_meeting(720, 144, obj_brick) || position_meeting(720, 208, obj_brick) || position_meeting(656, 144, obj_brick) || position_meeting(656, 208, obj_brick)){
                game_ended = true
                exit
            }
            inst0 = instance_create(720, 144, obj_block)
            inst0.image_index = 1
            inst1 = instance_create(720, 208, obj_block)
            inst1.image_index = 1
            inst2 = instance_create(656, 144, obj_block)
            inst2.image_index = 1
            inst3 = instance_create(656, 208, obj_block)
            inst3.image_index = 1
        }

        if rand = 2{
            type = 2
            if (position_meeting(720, 144, obj_brick) || position_meeting(656, 144, obj_brick) || position_meeting(656, 208, obj_brick) || position_meeting(592, 208, obj_brick)){
                game_ended = true
                exit
            }
            inst0 = instance_create(720, 144, obj_block)
            inst0.image_index = 2
            inst1 = instance_create(656, 144, obj_block)
            inst1.image_index = 2
            inst2 = instance_create(656, 208, obj_block)
            inst2.image_index = 2
            inst3 = instance_create(592, 208, obj_block)
            inst3.image_index = 2
        }

        if rand = 3{
            type = 3
            if (position_meeting(720, 208, obj_brick) || position_meeting(656, 208, obj_brick) || position_meeting(656, 144, obj_brick) || position_meeting(592, 144, obj_brick)){
                game_ended = true
                exit
            }
            inst0 = instance_create(720, 208, obj_block)
            inst0.image_index = 3
            inst1 = instance_create(656, 208, obj_block)
            inst1.image_index = 3
            inst2 = instance_create(656, 144, obj_block)
            inst2.image_index = 3
            inst3 = instance_create(592, 144, obj_block)
            inst3.image_index = 3
        }

        if rand = 4{
            type = 4
            if (position_meeting(720, 208, obj_brick) || position_meeting(656, 144, obj_brick) || position_meeting(656, 208, obj_brick) || position_meeting(592, 208, obj_brick)){
                game_ended = true
                exit
            }
            inst0 = instance_create(720, 208, obj_block)
            inst0.image_index = 4
            inst1 = instance_create(656, 144, obj_block)
            inst1.image_index = 4
            inst2 = instance_create(656, 208, obj_block)
            inst2.image_index = 4
            inst3 = instance_create(592, 208, obj_block)
            inst3.image_index = 4
            }

        if rand = 5{
            type = 5
            if (position_meeting(720, 144, obj_brick) || position_meeting(720, 208, obj_brick) || position_meeting(656, 208, obj_brick) || position_meeting(592, 208, obj_brick)){
                game_ended = true
                exit
            }
            inst0 = instance_create(720, 144, obj_block)
            inst0.image_index = 5
            inst1 = instance_create(720, 208, obj_block)
            inst1.image_index = 5
            inst2 = instance_create(656, 208, obj_block)
            inst2.image_index = 5
            inst3 = instance_create(592, 208, obj_block)
            inst3.image_index = 5
        }

        if rand = 6{
            type = 6
            if (position_meeting(720, 208, obj_brick) || position_meeting(656, 208, obj_brick) || position_meeting(592, 208, obj_brick) || position_meeting(592, 144, obj_brick)){
                game_ended = true
                exit
            }
            inst0 = instance_create(720, 208, obj_block)
            inst0.image_index = 6
            inst1 = instance_create(656, 208, obj_block)
            inst1.image_index = 6
            inst2 = instance_create(592, 208, obj_block)
            inst2.image_index = 6
            inst3 = instance_create(592, 144, obj_block)
            inst3.image_index = 6
        }
        next_block = -1

        while next_block &lt; 0{
            next_block = round(random(7)-1)
        }
    }

    if game_ended = true {
        score = 0

        ini_open("userdata.ini")
        ini_write_real("save","highscore_easy",global.hse)
        ini_write_real("save","highscore_medium",global.hsm)
        ini_write_real("save","highscore_hard",global.hsh)
        ini_write_real("save","highscore_god",global.hsg)
        ini_write_real("save","highscore_ultra",global.hsu)
        ini_close()
    }

    if time = global.difficulty-1{
        if instance_exists(inst0) &amp;&amp; instance_exists(inst1) &amp;&amp; instance_exists(inst2) &amp;&amp; instance_exists(inst3){
            if (inst0.y &gt; 1168 || inst1.y &gt; 1168 || inst2.y &gt; 1168 || inst3.y &gt; 1168 || position_meeting(inst0.x, inst0.y+64, obj_brick) || position_meeting(inst1.x, inst1.y+64, obj_brick) || position_meeting(inst2.x, inst2.y+64, obj_brick) || position_meeting(inst3.x, inst3.y+64, obj_brick)){
                inst4 = instance_create(inst0.x, inst0.y, obj_brick)
                inst4.image_index = inst0.image_index
                inst5 = instance_create(inst1.x, inst1.y, obj_brick)
                inst5.image_index = inst1.image_index
                inst6 = instance_create(inst2.x, inst2.y, obj_brick)
                inst6.image_index = inst2.image_index
                inst7 = instance_create(inst3.x, inst3.y, obj_brick)
                inst7.image_index = inst3.image_index
                instance_destroy(obj_block)
            }
        }
    }

    var21 = 1232
    if obj_brick{
        while var21 &gt;= 144{
            with obj_brick{
                if y = obj_control.var21{
                    obj_control.var22 += 1
                }
            }

            if var22 = 10{
                with obj_brick{
                    if y = obj_control.var21{
                        instance_destroy()
                    }
                }
                with obj_brick{
                    if y &lt;= obj_control.var21{
                        y += 64
                    }
                }
                score += 1
                if global.difficulty = 30 {
                    if score + 1 &gt;= global.hse{
                        global.hse = score
                    }
                } else if global.difficulty = 20 {
                    if score + 1 &gt;= global.hsm {
                        global.hsm = score
                    }
                } else if global.difficulty = 10 {
                    if score + 1 &gt;= global.hsh {
                        global.hsh = score
                    }
                } else if global.difficulty = 5 {
                    if score + 1 &gt;= global.hsg {
                        global.hsg = score
                    }
                } else if global.difficulty = 3 {
                    if score + 1 &gt;= global.hsu {
                        global.hsu = score
                    }
                }
            }
            var21 -= 64
            var22 = 0
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>score = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("userdata.ini")
ini_write_real("save","highscore_easy",global.hse)
ini_write_real("save","highscore_medium",global.hsm)
ini_write_real("save","highscore_hard",global.hsh)
ini_write_real("save","highscore_god",global.hsg)
ini_write_real("save","highscore_ultra",global.hsu)
ini_close()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.hse = 0
global.hsm = 0
global.hsh = 0
global.hsg = 0
global.hsu = 0
global.lines = false
global.settings = false
global.debug = false
global.difficulty = 30
global.game_started = false
if os_browser = !browser_not_a_browser {
    if (browser_width &gt;= 720) &amp;&amp; (browser_height &gt;= 720) {
        size = 720
    } else {
        if (browser_width &lt;= browser_height){
            size = browser_width
        } else {
            size = browser_height
        }
    }
    window_set_size(size, size)
}

ini_open("userdata.ini")
global.hse = ini_read_real("save","highscore_easy",global.hse)
global.hsm = ini_read_real("save","highscore_medium",global.hsm)
global.hsh = ini_read_real("save","highscore_hard",global.hsh)
global.hsg = ini_read_real("save","highscore_god",global.hsg)
global.hsu = ini_read_real("save","highscore_ultra",global.hsu)
ini_close()
global.difficulty_select = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if bonus {
    draw_set_valign(fa_center)
    draw_set_halign(fa_center)
    draw_text_transformed(size/2,size/4,"Ultra-Nightmare", bonus, bonus,0)
    bonus -= delta_time/1000000
}
if global.difficulty = 3 {
    if game_ended {
        draw_set_alpha(0.4
        )
    } else {
        draw_set_alpha(0.2)
    }
    draw_set_colour(c_red)
    draw_rectangle(0, 0, 1600, 1600, false)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_left)
draw_set_valign(fa_top)
draw_set_alpha(1)
draw_set_font(fnt_header)
draw_set_colour(c_white)
draw_text(10,10,"Tetris By Electric S01")
draw_text(30,1320,"Rows:" + string(score))
if global.difficulty = 30 {
    draw_text(750,1320 ,"High Score:" + string(global.hse))
} else if global.difficulty = 20 {
    draw_text(750,1320 ,"High Score:" + string(global.hsm))
} else if global.difficulty = 10 {
    draw_text(750,1320 ,"High Score:" + string(global.hsh))
} else if global.difficulty = 5 {
    draw_text(750,1320 ,"High Score:" + string(global.hsg))
} else if global.difficulty = 3 {
    draw_text(750,1320 ,"High Score:" + string(global.hsu))
}


draw_set_colour(make_colour_rgb(25, 25, 25))
draw_rectangle(400,144,1040,1296, false)

draw_set_colour(c_white)
draw_rectangle(400, 144, 1040, 1296, true)
draw_rectangle(399, 143, 1039, 1295, true)

if global.lines {
    draw_line(463, 142, 463, 1294)
    draw_line(527, 142, 527, 1294)
    draw_line(591, 142, 591, 1294)
    draw_line(655, 142, 655, 1294)
    draw_line(719, 142, 719, 1294)
    draw_line(783, 142, 783, 1294)
    draw_line(847, 142, 847, 1294)
    draw_line(911, 142, 911, 1294)
    draw_line(975, 142, 975, 1294)
    draw_line(464, 142, 464, 1294)
    draw_line(528, 142, 528, 1294)
    draw_line(592, 142, 592, 1294)
    draw_line(656, 142, 656, 1294)
    draw_line(720, 142, 720, 1294)
    draw_line(784, 142, 784, 1294)
    draw_line(848, 142, 848, 1294)
    draw_line(912, 142, 912, 1294)
    draw_line(976, 142, 976, 1294)
    draw_line(401, 208, 1038, 208)
    draw_line(401, 272, 1038, 272)
    draw_line(401, 336, 1038, 336)
    draw_line(401, 400, 1038, 400)
    draw_line(401, 464, 1038, 464)
    draw_line(401, 528, 1038, 528)
    draw_line(401, 592, 1038, 592)
    draw_line(401, 656, 1038, 656)
    draw_line(401, 720, 1038, 720)
    draw_line(401, 784, 1038, 784)
    draw_line(401, 848, 1038, 848)
    draw_line(401, 912, 1038, 912)
    draw_line(401, 976, 1038, 976)
    draw_line(401, 1040, 1038, 1040)
    draw_line(401, 1104, 1038, 1104)
    draw_line(401, 1168, 1038, 1168)
    draw_line(401, 1232, 1038, 1232)
    draw_line(401, 207, 1038, 207)
    draw_line(401, 271, 1038, 271)
    draw_line(401, 335, 1038, 335)
    draw_line(401, 399, 1038, 399)
    draw_line(401, 463, 1038, 463)
    draw_line(401, 527, 1038, 527)
    draw_line(401, 591, 1038, 591)
    draw_line(401, 655, 1038, 655)
    draw_line(401, 719, 1038, 719)
    draw_line(401, 783, 1038, 783)
    draw_line(401, 847, 1038, 847)
    draw_line(401, 911, 1038, 911)
    draw_line(401, 975, 1038, 975)
    draw_line(401, 1039, 1038, 1039)
    draw_line(401, 1103, 1038, 1103)
    draw_line(401, 1167, 1038, 1167)
    draw_line(401, 1231, 1038, 1231)
}

va = 80
if debug{
    draw_set_colour(c_white)
    draw_text(0, 13*va, "View port = " + string(browser_width) + string(browser_height))
    draw_text(0, 14*va, "Next block = " + string(next_block))
    draw_text(0, 15*va, "FPS = " + string(fps))
    draw_text(0, 16*va, "Real FPS = " + string(fps_real))
    draw_text(0, 17*va, "room_speed = " + string(room_speed))
    if instance_exists(obj_block){
        draw_text(inst0.x,inst0.y,"1")
        draw_text(inst1.x,inst1.y,"2")
        draw_text(inst2.x,inst2.y,"3")
        draw_text(inst3.x,inst3.y,"4")
    }
}

if next_block = 0{
    draw_sprite(spr_block, 0, 1312, 656)
    draw_sprite(spr_block, 0, 1248, 656)
    draw_sprite(spr_block, 0, 1184, 656)
    draw_sprite(spr_block, 0, 1120, 656)
}
if next_block = 1{
    draw_sprite(spr_block, 1, 1248, 720)
    draw_sprite(spr_block, 1, 1248, 656)
    draw_sprite(spr_block, 1, 1184, 720)
    draw_sprite(spr_block, 1, 1184, 656)
}
if next_block = 2{
    draw_sprite(spr_block, 2, 1248, 656)
    draw_sprite(spr_block, 2, 1184, 720)
    draw_sprite(spr_block, 2, 1184, 656)
    draw_sprite(spr_block, 2, 1120, 720)
}
if next_block = 3{
    draw_sprite(spr_block, 3, 1248, 720)
    draw_sprite(spr_block, 3, 1184, 720)
    draw_sprite(spr_block, 3, 1184, 656)
    draw_sprite(spr_block, 3, 1120, 656)
}
if next_block = 4{
    draw_sprite(spr_block, 4, 1248, 720)
    draw_sprite(spr_block, 4, 1184, 720)
    draw_sprite(spr_block, 4, 1184, 656)
    draw_sprite(spr_block, 4, 1120, 720)
}
if next_block = 5{
    draw_sprite(spr_block, 5, 1248, 720)
    draw_sprite(spr_block, 5, 1248, 656)
    draw_sprite(spr_block, 5, 1184, 720)
    draw_sprite(spr_block, 5, 1120, 720)
}
if next_block = 6{
    draw_sprite(spr_block, 6, 1248, 720)
    draw_sprite(spr_block, 6, 1184, 720)
    draw_sprite(spr_block, 6, 1120, 720)
    draw_sprite(spr_block, 6, 1120, 656)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="114">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.difficulty = 3
bonus = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if debug debug = false else debug = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy(obj_block)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if game_paused = true game_paused = false else game_paused = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
